openapi: 3.0.3
info:
  description: A small sample API to grasp the basics of the OpenAPI Specification
  title: Formel 1 API
  version: 0.0.1
servers:
- url: http://localhost:8080/api/v1/f1
paths:
  /driver:
    get:
      parameters:
      - description: How many items to return at one time
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DriverDto'
                type: array
          description: An paged array of drivers
      summary: List all drivers (funktioniert noch nicht)
      x-accepts: application/json
  /racingteam:
    get:
      parameters:
      - description: How many items to return at one time
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RacingTeamDto'
                type: array
          description: An paged array of Racing Teams
      summary: List all Racing Teams (funktioniert noch nicht)
      x-accepts: application/json
  /ponies:
    get:
      operationId: getPonies
      parameters:
      - description: How many items to return at one time
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PonyDto'
                type: array
          description: An paged array of pets
      summary: List all ponies
      x-accepts: application/json
    post:
      operationId: addPony
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PonyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PonyDto'
          description: added the pony
      summary: introduce a new pony to the flock
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    DriverDto:
      example:
        country: Switzerland
        racingTeam: '{}'
        name: Müller
        prename: Hans
        age: 20
        points: 15
      properties:
        name:
          example: Müller
          maxLength: 255
          minLength: 1
          type: string
        prename:
          example: Hans
          maxLength: 255
          minLength: 1
          type: string
        age:
          example: 20
          maximum: 100
          minimum: 18
          type: integer
        racingTeam:
          type: object
        points:
          example: 15
          maximum: 600
          minimum: 0
          type: integer
        country:
          example: Switzerland
          maxLength: 255
          minLength: 1
          type: string
      required:
      - age
      - country
      - name
      - points
      - prename
    RacingTeamDto:
      example:
        country: country
        name: name
        teamBoss: teamBoss
        engineProducer: engineProducer
        points: 96
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        teamBoss:
          maxLength: 255
          minLength: 1
          type: string
        engineProducer:
          maxLength: 255
          minLength: 1
          type: string
        country:
          maxLength: 255
          minLength: 1
          type: string
        points:
          maximum: 1200
          minimum: 0
          type: integer
      required:
      - country
      - engineProducer
      - name
      - points
      - teamBoss
    PonyDto:
      example:
        birthday: 2021-01-31T00:00:00.000+0000
        name: Thunder
        id: 42
      properties:
        id:
          example: 42
          minimum: 0
          readOnly: true
          type: integer
        name:
          example: Thunder
          minLength: 1
          type: string
        birthday:
          example: 2021-01-31
          format: date
          type: string
      required:
      - birthday
      - name

